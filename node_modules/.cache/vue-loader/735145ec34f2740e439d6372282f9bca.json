{"remainingRequest":"C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\src\\views\\table\\index.vue?vue&type=style&index=0&id=e97432b2&lang=css&","dependencies":[{"path":"C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\src\\views\\table\\index.vue","mtime":1669903870866},{"path":"C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":1669857819555},{"path":"C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1669857824261},{"path":"C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\node_modules\\postcss-loader\\src\\index.js","mtime":1669857820524},{"path":"C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669857818857},{"path":"C:\\Users\\artha\\IdeaProjects\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1669857823321}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJ0Avc3R5bGVzL3RhYmxlLmNzcyc7Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA","file":"index.vue","sourceRoot":"src/views/table","sourcesContent":["<style>\r\n  @import '@/styles/table.css';\r\n</style>\r\n<template>\r\n  <div class=\"app-container\" >\r\n    <table class=\"tablaOcupados\">\r\n      <tr>\r\n        <tc>Nombre familia</tc>\r\n        <tc>Rut</tc>\r\n        <tc>Lugar de estadia</tc>\r\n        <tc>Fecha de entrada</tc>\r\n        <tc>Fecha de salida</tc>\r\n        <tc>Telefono</tc>\r\n        <tc>Correo</tc>\r\n      </tr>\r\n      <tr v-for=\"data in datalist\" :key=\"data.id\">\r\n        <tc>{{data.name}}</tc>\r\n        <tc>{{data.rut}}</tc>\r\n        <tc>{{data.region}}</tc>\r\n        <tc>{{data.date1}}</tc>\r\n        <tc>{{data.date2}}</tc>\r\n        <tc>{{data.telefono}}</tc>\r\n        <tc>{{data.correo}}</tc>  \r\n      </tr>\r\n    </table>\r\n  </div>\r\n</template>\r\n<script>\r\n// Import the functions you need from the SDKs you need\r\n\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getAnalytics } from 'firebase/analytics'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAneNKVU_fkCu8Fm6BRLYp_lAiJ2uqfRMo',\r\n  authDomain: 'siloscastanos.firebaseapp.com',\r\n  databaseURL: 'https://siloscastanos-default-rtdb.firebaseio.com',\r\n  projectId: 'siloscastanos',\r\n  storageBucket: 'siloscastanos.appspot.com',\r\n  messagingSenderId: '715265181138',\r\n  appId: '1:715265181138:web:e9273b1ee3f9c4eed5740b',\r\n  measurementId: 'G-JBE9F4SV5K'\r\n}\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nconst analytics = getAnalytics(app)\r\n</script>\r\n<script>\r\nimport axios from 'axios'\r\nimport { getList } from '@/api/table'\r\n\r\nexport default {\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        published: 'success',\r\n        draft: 'gray',\r\n        deleted: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      datalist: ''\r\n    }\r\n  },\r\n  mounted(){\r\n    this.show()\r\n  },\r\n  /*created() {\r\n    this.fetchData()\r\n  },*/\r\n  methods: {\r\n    show: function() {\r\n      axios.get('https://siloscastanos-default-rtdb.firebaseio.com/reservas.json').then(response => {\r\n        this.formatPostData(response.data)\r\n      })\r\n    },\r\n    //aqui se ordena los datos para mostrarlo en la tabla\r\n    formatPostData(posts){\r\n      this.datalist = []\r\n      console.log(posts)\r\n      for (let key in posts) {\r\n        this.datalist.push({... posts[key], id: key })\r\n      }\r\n      console.log(this.datalist)\r\n    },\r\n    /*fetchData() {\r\n      this.listLoading = true\r\n      getList().then(response => {\r\n        this.list = response.data.items\r\n        this.listLoading = false\r\n      })\r\n    }*/\r\n  }\r\n}\r\n</script>\r\n"]}]}